/*
 * STEPPER_DRIVER.h
 *
 *  Created on: Sep 18, 2022
 *      Author: hp
 */

#ifndef HAL_STEPPER_DRIVER_STEPPER_DRIVER_H_
#define HAL_STEPPER_DRIVER_STEPPER_DRIVER_H_

#include "LIB/STD_TYPES.h"
#include "LIB/BIT_MATH.h"
#include "LIB/STM_CONFIG.h"
#include "LIB/DELAY.h"
#include "MCAL/GPIO/GPIO_interface.h"

typedef enum {STEPPER_FORWARD,STEPPER_BACKWARD}STEPPER_DIR_ID;

typedef enum {STEP_}STEPPER_STEP_SIZE_ID;

#define MAX_NUMBER_OF_STEPPERS 10

typedef struct {

	GPIO_ID** STEPPER_PORTS; //StepPin , DirPin
	u8* STEPPER_PINS; //StepPin , DirPin
	u32 STEPPER_STEPS;
	STEPPER_STEP_SIZE_ID STEPPER_STEP_SIZE;
	STEPPER_DIR_ID STEPPER_DIR;
	u32 STEPPER_DELAY_ms;
}STEPPER_ID;



typedef struct
{
	STEPPER_ID* STEPPERS [MAX_NUMBER_OF_STEPPERS];
	u8 STEPPER_BUFFER_COUNTER;

}MULTI_STEPPER_ID;


STEPPER_ID STEPPER_INIT(GPIO_ID** STEPPER_PORTS,u8* STEPPER_PINS);


void STEPPER_void_SET_STEPSNUMBER(STEPPER_ID* STEPPER,u32 steps_number);

void STEPPER_void_SET_SPEED(STEPPER_ID* STEPPER,u32 speed);

void STEPPER_void_RUN_STEPS(STEPPER_ID* STEPPER,STEPPER_DIR_ID DIR);

void STEPPER_void_RUN_ONE_STEP(STEPPER_ID* STEPPER,STEPPER_DIR_ID DIR);


void MULTI_STEPPER_ADD_STEPPER(MULTI_STEPPER_ID* MULTI_STEPPER,STEPPER_ID* STEPPER_ID);

void MULTI_STEPPER_ADD_STEPPERS(MULTI_STEPPER_ID* MULTI_STEPPER,STEPPER_ID** STEPPER_ID);

void MULTI_STEPPER_RUN_STEPS(MULTI_STEPPER_ID* MULTI_STEPPER,u32* STEPS);


/*
 * 	GPIO_ID* STEPPER_PORTS []= {GPIOA_REGS,GPIOA_REGS};
	u8 STEPPER_PINS []= {8,9};
	STEPPER_ID STEPPER = STEPPER_INIT(STEPPER_PORTS, STEPPER_PINS);
	STEPPER_void_SET_SPEED(&STEPPER,50);
	STEPPER_void_SET_STEPSNUMBER(&STEPPER, 200*32);
	STEPPER_void_RUN_STEPS(&STEPPER,STEPPER_FORWARD);
 *
 *
 *
 *
 *
 */


#endif /* HAL_STEPPER_DRIVER_STEPPER_DRIVER_H_ */
