/*
 * ADC_private.h
 *
 *  Created on: Sep 3, 2022
 *      Author: hp
 */

#ifndef MCAL_ADC_ADC_PRIVATE_H_
#define MCAL_ADC_ADC_PRIVATE_H_

#include "LIB/STM_CONFIG.h"
#include "LIB/BIT_MATH.h"
#include "LIB/STD_TYPES.h"

#define ADC_MAX_BLOUCKING_TIME 500

typedef enum {ADC_SINGLE_CONV,ADC_CONTINUOUS_CONV}ADC_MODE_ID;

typedef enum {ADC_Rising,ADC_Falling,ADC_AnyChange}ADC_TRIGGER_TYPE_ID;

typedef enum {
	ADC_IN0,ADC_IN1,ADC_IN2,ADC_IN3,
	ADC_IN4,ADC_IN5,ADC_IN6,ADC_IN7,
	ADC_IN8,ADC_IN9,ADC_IN10,ADC_IN11,
	ADC_IN12,ADC_IN13,ADC_IN14,ADC_IN15,

}ADC_CHANNEL_ID;


typedef enum {
	SAMPLE_TIME_3,SAMPLE_TIME_15,
	SAMPLE_TIME_28,SAMPLE_TIME_56,
	SAMPLE_TIME_84,SAMPLE_TIME_112,
	SAMPLE_TIME_144,SAMPLE_TIME_480
			}SAMPLE_TIME_ID;

typedef enum {ADC_PRESCFACTOR_2,ADC_PRESCFACTOR_4,ADC_PRESCFACTOR_6,ADC_PRESCFACTOR_8}ADC_PRESCFACTOR_ID;



typedef struct {
	u32 ADC_SR;
	u32 ADC_CR1;
	u32 ADC_CR2;
	u32 ADC_SMPR1;
	u32 ADC_SMPR2;
	u32 ADC_JOFR1;
	u32 ADC_JOFR2;
	u32 ADC_JOFR3;
	u32 ADC_JOFR4;
	u32 ADC_HTR;
	u32 ADC_LTR;
	u32 ADC_SQR1;
	u32 ADC_SQR2;
	u32 ADC_SQR3;
	u32 ADC_JSQR;
	u32 ADC_JDR[4];
	u32 ADC_DR;
	//u32 Reserved[693];
	u32 ADC_CCR;
}
ADC_ID;





#define ADC_REGS ((ADC_ID*)(0x40012000))

#endif /* MCAL_ADC_ADC_PRIVATE_H_ */
